name: Windows-MSYS2-Build

on:
  push:
    branches:
      - main
      - upgrade-from-messaging-system
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_windows_msys2:
    permissions:
      contents: read
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
        sys: [mingw64, ucrt64]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          ssh-strict: true
          ssh-user: git
          persist-credentials: true
          clean: true
          sparse-checkout-cone-mode: true
          fetch-depth: 1
          fetch-tags: false
          show-progress: true
          lfs: false
          set-safe-directory: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          update: true
          install: >-
            base-devel
            mingw-w64-${{ matrix.sys }}-toolchain
            mingw-w64-${{ matrix.sys }}-cmake
            mingw-w64-${{ matrix.sys }}-ninja
            mingw-w64-${{ matrix.sys }}-pkgconf
            mingw-w64-${{ matrix.sys }}-fmt
            mingw-w64-${{ matrix.sys }}-gtest
            mingw-w64-${{ matrix.sys }}-benchmark

      - name: Cache build directory
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ runner.os }}-msys2-${{ matrix.sys }}-${{ matrix.build_type }}-${{ hashFiles('**/*.cpp', '**/*.h', 'CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-msys2-${{ matrix.sys }}-${{ matrix.build_type }}-
            ${{ runner.os }}-msys2-${{ matrix.sys }}-

      - name: Configure CMake
        run: |
          cmake -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_C_COMPILER=gcc \
            -DCMAKE_CXX_COMPILER=g++ \
            -DUSE_UNIT_TEST=ON \
            -DBUILD_CONTAINER_EXAMPLES=ON \
            -DBUILD_CONTAINER_SAMPLES=ON \
            -DENABLE_MESSAGING_FEATURES=ON \
            -DENABLE_PERFORMANCE_METRICS=ON \
            -DENABLE_EXTERNAL_INTEGRATION=ON

      - name: Build
        run: cmake --build build --parallel

      - name: Run Tests
        working-directory: build
        run: |
          ctest --output-on-failure --verbose

      - name: Run Example Programs
        working-directory: build
        run: |
          if [ -f examples/basic_container_example.exe ]; then
            echo "Running basic container example..."
            ./examples/basic_container_example.exe
          fi
          if [ -f examples/advanced_container_example.exe ]; then
            echo "Running advanced container example..."
            ./examples/advanced_container_example.exe
          fi

